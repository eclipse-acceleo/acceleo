[module withInlinedBlocksAndIndentationComposedBlocks('http://www.eclipse.org/emf/2002/Ecore')/]

[comment @main /]
[template public myTemplate(myParam : ecore::EPackage)]
  [file (myParam.name + '.txt', overwrite)]
    some text
      [protected (myParam.name)]
        [myParam.name/]
        [if (true)][for (v | Sequence{1, 2, 3})]inlined then[/for][else][for (v | Sequence{1, 2, 3})]inlined else[/for][/if]
        [if (true)][for (v | Sequence{1, 2, 3})]['inlined then ' + v/][/for][else][for (v | Sequence{1, 2, 3})]['inlined else ' + v/][/for][/if]
        [if (false)][for (v | Sequence{1, 2, 3})]inlined then[/for][else][for (v | Sequence{1, 2, 3})]inlined else[/for][/if]
        [if (false)][for (v | Sequence{1, 2, 3})]['inlined then ' + v/][/for][else][for (v | Sequence{1, 2, 3})]['inlined else ' + v/][/for][/if]
        [if (true)]
          [for (v | Sequence{1, 2, 3})]
            then block
          [/for]
        [else]
          [for (v | Sequence{1, 2, 3})]
            else block
          [/for]
        [/if]
        [if (true)]
          [for (v | Sequence{1, 2, 3})]
            ['then ' + v/]
          [/for]
        [else]
          [for (v | Sequence{1, 2, 3})]
            ['else ' + v/]
          [/for]
        [/if]
        [if (false)]
          [for (v | Sequence{1, 2, 3})]
            then block
          [/for]
        [else]
          [for (v | Sequence{1, 2, 3})]
            else block
          [/for]
        [/if]
        [if (false)]
          [for (v | Sequence{1, 2, 3})]
            ['then ' + v/]
          [/for]
        [else]
          [for (v | Sequence{1, 2, 3})]
            ['else ' + v/]
          [/for]
        [/if]
        [myParam.name/]
        [let myVariable : ecore::EClassifier = myParam.eClassifiers->first()][for (v | Sequence{1, 2, 3})]inlined let[/for][/let]
        [let myVariable : ecore::EClassifier = myParam.eClassifiers->first()][for (v | Sequence{1, 2, 3})]['inlined let ' + v/][/for][/let]
        [let myVariable : ecore::EClassifier = myParam.eClassifiers->first()]
          [for (v | Sequence{1, 2, 3})]
            let block
          [/for]
        [/let]
        [let myVariable : ecore::EClassifier = myParam.eClassifiers->first()]
          [for (v | Sequence{1, 2, 3})]
            ['let ' + v/]
          [/for]
        [/let]
      [/protected]
    some text
  [/file]
[/template]