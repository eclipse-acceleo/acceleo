@Test var2.oclAsType(Integer) => 2
@Test var2.oclIsUndefined() => false
@Test var2.oclIsTypeOf(Integer) => true
@Test var2.oclIsTypeOf(EPackage) => false
@Test var2.oclIsKindOf(Integer) => true
@Test var2.oclIsKindOf(EPackage) => false
@Test var1 = var2 => false
@Test var1 = var1 => true
@Test var1 <> var2 => true
@Test var1 <> var1 => false
@Test var2.toString() => 2
@Test var1 + var2 => 3
@Test var1 - var2 => -1
@Test var2 - var1 => 1
@Test var1 * var2 => 2
@Test var1 / var2 => 0.5
@Test var2 / var1 => 2.0
@Test var1 < var2 => true
@Test var2 < var1 => false
@Test var1 > var2 => false
@Test var2 > var1 => true
@Test var1 <= var1 => true
@Test var1 <= var2 => true
@Test var2 <= var1 => false
@Test var1 >= var1 => true
@Test var1 >= var2 => false
@Test var2 >= var1 => true
@Test var1.abs() => 1
@Test var2.abs() => 2
@Test var1.div(var2) => 0
@Test var2.div(var1) => 2
@Test var1.floor() => 1
@Test var2.floor() => 2
@Test var1.max(var2) => 2
@Test var2.max(var1) => 2
@Test var1.min(var2) => 1
@Test var2.min(var1) => 1
@Test var1.mod(var2) => 1
@Test var2.mod(var1) => 0
@Test var1.round() => 1
@Test var2.round() => 2
@Test var1.toString() => 1
@Test var2.toString() => 2
@Test 1 + (2 - 1)*3 >= 4 + 2 => false
@Test var1.oclAsSet() => 1
