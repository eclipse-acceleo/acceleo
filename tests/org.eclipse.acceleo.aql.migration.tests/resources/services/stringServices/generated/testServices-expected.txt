@Test 'test'.size() => 4
@Test '12'.toInteger() => 12
@Test '1.2'.toReal() => 1.2
@Test 'test'.toUpper() => TEST
@Test 'TEST'.toLower() => test
@Test 'test'.contains('es') => true
@Test 'test'.contains('toto') => false
@Test 'test'.endsWith('st') => true
@Test 'test'.endsWith('toto') => false
@Test 'test'.replaceAll('t', 'z') => zesz
@Test 'test'.tokenize() => test
@Test '  test '.trim() => test
@Test 'test'.strcmp('test') => 0
@Test 'test'.strstr('es') => true
@Test 'test'.strstr('toto') => false
@Test 'test'.concat('test') => testtest
@Test 'test'.equalsIgnoreCase('tEsT') => true
@Test 'test'.equalsIgnoreCase('toto') => false
@Test 'test'.first(2) => te
@Test 'test'.isAlpha() => true
@Test 'test1'.isAlpha() => false
@Test 'test'.isAlphanum() => true
@Test 'test1'.isAlphanum() => true
@Test '111'.isAlphanum() => true
@Test 'test'.last(2) => st
@Test 'test'.lastIndex('a') => -1
@Test 'test'.lastIndex('t') => 4
@Test 'test'.matches('test') => true
@Test 'test'.prefix('pre') => pretest
@Test 'test'.replace('te', 'ta') => tast
@Test 'test'.startsWith('te') => true
@Test 'test'.startsWith('toto') => false
@Test 'test'.substitute('te', 'ta') => tast
@Test 'test'.substituteAll('t', 'z') => zesz
@Test 'test'.substring(2) => est
@Test 'test'.substring(2,3) => es
@Test 'test'.toUpperCase() => TEST
@Test 'test'.toUpperFirst() => Test
@Test 'TEST'.toLowerCase() => test
@Test 'TEST'.toLowerFirst() => tEST
@Test 'test'.tokenize() => test
