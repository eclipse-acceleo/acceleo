################################################################################
# Copyright (c) 2008, 2014 Obeo.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     Obeo - initial API and implementation
################################################################################
## note : apostrophes need to be doubled in these messages or they'll be ignored

#org.eclipse.acceleo.ui.activator
AcceleoUIActivator.ElementNotFound = Required element not found.
AcceleoUIActivator.LogNullStatus = Status to be logged cannot be null.
AcceleoUIActivator.LogNullException = Exception to be logged cannot be null.
AcceleoUIActivator.UnexpectedException = Unexpected Acceleo problem.


# org.eclipse.acceleo.internal.ide.ui.editors.template
AcceleoElementHyperlinkDetector.OpenDeclarationLabel = Open declaration of {0}
AcceleoElementHyperlinkDetector.MetamodelNotInAResource = The element ''{0}'' doesn't not seems to be contained in a resource.

# org.eclipse.acceleo.ide.ui.builders
AcceleoBuilder.StartingBuild = Starting the build of the project {0} (start: {1}ms)
AcceleoBuilder.ComputeAccessibleEcores = Computing the list of accessible ecore files (start: {0}ms)
AcceleoBuilder.LoadAccessibleEcores = Loading the accessible ecore files (start: {0}ms)
AcceleoBuilder.ComputeAccessibleAcceleoModules = Compute the accessible Acceleo modules (start: {0}ms)
AcceleoBuilder.CompilationStart = Starting the compilation of the Acceleo modules (start: {0}ms)
AcceleoBuilder.BuildFileNotCompiled = Compiling remaining modules not in the dependency graph of the delta (start: {0}ms)
AcceleoBuilder.GeneratingAcceleoFiles = Generating Java launchers (start: {0}ms)
AcceleoBuilder.RefreshingProjects = Refreshing projects (start: {0}ms)
AcceleoBuilder.GenerateBuildFiles = Generating build files (start: {0}ms)

AcceleoBuilderTask.ProjectIssue = Acceleo Compiler issue : The project value isn''t valid.
AcceleoBuilderTask.BinIssue = Acceleo Compiler issue : The output folder doesn''t exist.
AcceleoBuilderTask.TargetIssue = Acceleo Compiler issue : The target folder doesn''t exist.

AcceleoCompileOperation.Task.Compile = Acceleo Compilation
AcceleoCompileOperation.Task.Clean = Cleaning {0}
AcceleoCompileOperation.NameConflict = Naming conflicts in classpath for {0}
AcceleoCompileOperation.NotFullyCompliant = Strict MTL compliance - You have checked the strict standard compliance of the Acceleo Compiler but you use an operation of the non-standard library ''{0}''.
AcceleoCompileOperation.NoDependencyWithDynamicMetamodelProject = The project does not seem to have any dependencies with the project ''{0}'' containing this metamodel. Open the MANIFEST.MF of the project ''{1}'' to add the dependency.

JavaServiceUtils.GenerateAcceleoModuleWrapper = Generating the Acceleo Java services module wrapper.

# org.eclipse.acceleo.ide.ui.builders.prefs
AcceleoCompilerPage.Description = The Acceleo Compiler preference page
AcceleoCompilerPage.StrictMTLCompliance = Strict MTL Compliance
AcceleoCompilerPage.StrictMTLComplianceHelp = Activating the strict MTL compliance will create errors on all non standard operations added by Acceleo.
AcceleoCompilerPage.ResourceKind = Acceleo Module Serialization Kind
AcceleoCompilerPage.XMIResourceKind = XMI
AcceleoCompilerPage.BinaryResourceKind = Binary
AcceleoCompilerPage.ResourceSerialization = Binary resource serialization produces smaller ".emtl" files (compiled Acceleo modules) that can be loaded faster but they are not as smart as XMI resources to handle the URI of the metamodel. Binary resource serialization should be used only if your metamodel has been deployed in a plugin of your Eclipse instance. If your metamodel is in your workspace or if you are handling a complex case, you should prefer XMI based serialization.
AcceleoCompilerPage.TrimmedPosition = Remove positions from the ".emtl" files. (Advanced users only, see help)
AcceleoCompilerPage.TrimmedPositionHelp = By removing the position from the compiled Acceleo module, Acceleo will produce smaller emtl files but if the engine reports a problem, all the stack traces will have the positions "0" for error in an Acceleo module. It is not recommended to remove the positions of the emtl files while working on a generator as it will impact the refactoring, the traceability and the search mechanism.
AcceleoCompilerPage.CompilationKind = Compilation Path Kind
AcceleoCompilerPage.PlatformResourcePath = Workspace relative file paths (prefixed by "platform:/resource/")
AcceleoCompilerPage.AbsolutePath = Absolute file system paths
AcceleoCompilerPage.CompilationPathHelp = "Absolute file system paths" will make the Acceleo builder compile the references to other modules (import/extends) with the \n\
absolute file system paths while "Workspace relative file paths" will make the Acceleo builder use paths relative to the workspace. \n\
Starting with Acceleo 3.3, "Workspace relative file paths" is the default behavior.
AcceleoCompilerPage.BuildingProject = Building project {0}


# org.eclipse.acceleo.ide.ui.builders.runner
CreateRunnableAcceleoOperation.MissingExport = The template contains a main annotation (@main) but it isn''t accessible. the package {0} must be exported via the MANIFEST file.
CreateRunnableAcceleoOperation.MergerUnusable = The Acceleo Java entries merger cannot be used on this file.
CreateRunnableAcceleoOperation.MergerFailure = Couldn''t merge the generated Java file : compilation errors in the file.

# org.eclipse.acceleo.ide.ui.editors.template
AcceleoEditor.MissingNatureTitle = Missing Acceleo Project Nature
AcceleoEditor.MissingNatureDescription = You need to add the Acceleo Nature to project {0}
AcceleoSourceContent.NoPathFound = You have to configure the extension point ''org.eclipse.acceleo.engine.dynamic.templates'' and define a path (''src/'') to the directory containing the template ''{0}''.
AcceleoEditor.HighligthAllOccurrencesJob = Find occurrences in the Acceleo editor
AcceleoRemoveAnnotationJob.Name = Remove the Acceleo annotation
AcceleoDoc.Hover.AcceleoDocumentation = Acceleo Documentation
AcceleoDoc.Hover.OpenDeclarationActionTooltip = Open Declaration
AcceleoDoc.Hover.OpenInAcceleoDocViewActionTooltip = Show in AcceleoDoc View
AcceleoDoc.Hover.OpenInBrowserActionTooltip = Open Attached AcceleoDoc in a Browser
AcceleoDocAutoIndentStrategy.InvalidIndentation = Indentation must not be negative
AcceleoEditor.FoldingInformationControl = Press F2 to focus

# org.eclipse.acceleo.ide.ui.editors.template.actions
AcceleoReferencesSearch.Result.Label = ''{0}'' - {1} reference(s) in the workspace
AcceleoReferencesSearch.Result.Tooltip = References search result
AcceleoReferencesSearch.Query.Label = References search

AcceleoOutlinePageItemProvider.InvalidClassifier = Class {0} is not a valid classifier

# org.eclipse.acceleo.ide.ui.editors.template.action.refactor.pullup
AcceleoEditorPullUpRefactoring.RefactoringTitle = Pull Up
AcceleoEditorPullUpRefactoring.PullUpFirstInputWizardPage = Pull Up Wizard Page
AcceleoEditorPullUpRefactoring.PullUpSecondInputWizardPage = Pull Up Wizard Page
AcceleoEditorPullUpRefactoring.PullUpSecondInputWizardPageLabelName = Filename: 
AcceleoEditorPullUpRefactoring.NoTemplateToPullUp = There are no templates in this module to pull up. There should at least a template which is not overridding any other templates
AcceleoEditorPullUpRefactoring.InvalidRefactoringParameters = Invalid refactoring parameters
AcceleoEditorPullUpRefactoring.OutputModuleHasSimilarTemplates = The module already contains a similar template

# org.eclipse.acceleo.ide.ui.editors.template.action.refactor.rename
AcceleoEditorRenameRefactoring.NotInWorkspace = This file is not in the workspace, therefore we cannot modify it.
AcceleoEditorRenameRefactoring.ErrorInFile = This refactoring cannot be performed correctly due to errors in at least one file involved in the refactoring process. To perform this operation you will need to fix the errors first in the following file(s): ''{0}''  
AcceleoEditorRenameRefactoring.RefactoringTitle = Rename...
AcceleoEditorRenameRefactoring.CheckingPreconditions = Checking preconditions...
AcceleoEditorRenameRefactoring.CreatingChanges = Creating changes...
AcceleoEditorRenameRefactoring.UpdateReferences = &Update references

# org.eclipse.acceleo.ide.ui.editors.template.actions.refactor.renametemplate
AcceleoEditorRenameTemplateRefactoring.NewName = &New name:
AcceleoEditorRenameTemplateRefactoring.TemplatesAvailable = &Templates available:
AcceleoEditorRenameTemplateRefactoring.NoTemplateSpecified = No template specified
AcceleoEditorRenameTemplateRefactoring.RenameTemplateTitle = Refactoring: Rename Template
AcceleoEditorRenameTemplateRefactoring.NoTemplateInFile = There are no template in the current file
AcceleoEditorRenameTemplateRefactoring.RenamingTemplate = Renaming template
AcceleoEditorRenameTemplateRefactoring.RefactoringProjectName = Acceleo Rename Template
AcceleoEditorRenameTemplateRefactoring.RenamingTemplateWithNewName = Renaming template ''{0}'' with the new name ''{1}''
AcceleoEditorRenameTemplateRefactoring.RenameTemplateInputWizardPage = Rename Template Input Wizard Page
AcceleoEditorRenameTemplateRefactoring.InvalidTemplateName = Invalid template name
AcceleoEditorRenameTemplateRefactoring.TemplateOverloadingError = The name is already taken by a template with the same parameter(s)

# org.eclipse.acceleo.ide.ui.editors.template.actions.refactor.renamequery
AcceleoEditorRenameQueryRefactoring.NewName = &New name:
AcceleoEditorRenameQueryRefactoring.QueriesAvailable = &Queries available:
AcceleoEditorRenameQueryRefactoring.NoQuerySpecified = No query specified
AcceleoEditorRenameQueryRefactoring.RenameQueryTitle = Refactoring: Rename Query
AcceleoEditorRenameQueryRefactoring.NoQueryInFile = There are no query in the current file
AcceleoEditorRenameQueryRefactoring.RenamingQuery = Renaming query
AcceleoEditorRenameQueryRefactoring.RefactoringProjectName = Acceleo Rename Query
AcceleoEditorRenameQueryRefactoring.RenamingQueryWithNewName = Renaming query ''{0}'' with the new name ''{1}''
AcceleoEditorRenameQueryRefactoring.RenameQueryInputWizardPage = Rename Query Input Wizard Page
AcceleoEditorRenameQueryRefactoring.InvalidQueryName = Invalid query name
AcceleoEditorRenameQueryRefactoring.QueryOverloadingError = The name is already taken by a query with the same parameter(s)

# org.eclipse.acceleo.ide.ui.editors.template.actions.refactor.renamevariable
AcceleoEditorRenameVariableRefactoring.NewName = &New name:
AcceleoEditorRenameVariableRefactoring.NoVariableSpecified = No variable specified
AcceleoEditorRenameVariableRefactoring.RenameVariableTitle = Refactoring: Rename Variable
AcceleoEditorRenameVariableRefactoring.RenamingVariable = Renaming variable 
AcceleoEditorRenameVariableRefactoring.RefactoringProjectName = Acceleo Rename Variable
AcceleoEditorRenameVariableRefactoring.RenamingVariableWithNewName = Renaming variable ''{0}'' with the new name ''{1}''
AcceleoEditorRenameVariableRefactoring.RenameVariableInputWizardPage = Rename Variable Input Wizard Page
AcceleoEditorRenameVariableRefactoring.InvalidVariableName = Invalid variable name

# org.eclipse.acceleo.ide.ui.editors.template.actions.refactor.renamemodule
AcceleoEditorRenameModuleRefactoring.RenameModuleParticipant = Rename module participant
AcceleoEditorRenameModuleRefactoring.NewName = &New name:
AcceleoEditorRenameModuleRefactoring.RenameModuleTitle = Refactoring: Rename Module
AcceleoEditorRenameModuleRefactoring.InvalidModuleName = Invalid module name
AcceleoEditorRenameModuleRefactoring.RenamingModule = Renaming module
AcceleoEditorRenameModuleRefactoring.RenamingModuleWithNewName = Renaming module ''{0}'' with the new name ''{1}''
AcceleoEditorRenameModuleRefactoring.RenameModuleInputWizardPage = Rename Module Input Wizard Page
AcceleoEditorRenameModuleRefactoring.NoModuleSpecified = No module specified
AcceleoEditorRenameModuleRefactoring.ModuleOverloadingError = The name is already taken by another module in the same package
AcceleoEditorRenameModuleRefactoring.JavaRenameDescription = Renaming of the java file matching the module
AcceleoEditorRenameModuleRefactoring.ModuleNotCompiled = The module named ''{0}'' does not appear to have been compiled, as such Acceleo will not be able to participate in the refactoring to rename its references.  

# org.eclipse.acceleo.ide.ui.editors.template.actions.refactor.renametext
AcceleoEditorRenameTextRefactoring.NewName = &New name:
AcceleoEditorRenameTextRefactoring.NoTextSpecified = No text specified
AcceleoEditorRenameTextRefactoring.RenameTextTitle = Refactoring: Rename text
AcceleoEditorRenameTextRefactoring.RenamingText = Renaming text
AcceleoEditorRenameTextRefactoring.RefactoringProjectName = Acceleo Rename Text
AcceleoEditorRenameTextRefactoring.RenamingTextWithNewName = Renaming text ''{0}'' with the new name ''{1}''
AcceleoEditorRenameTextRefactoring.RenameTextInputWizardPage = Rename text Input Wizard Page

# org.eclipse.acceleo.ide.ui.editors.template.outline.actions
AcceleoEditorOutline.Actions.Sort = Sort by name
AcceleoEditorOutline.Actions.SortType = Sort by type
AcceleoEditorOutline.Actions.HideNonPublic = Hide non public templates, queries and macros
AcceleoEditorOutline.Actions.HideQueries = Hide queries
AcceleoEditorOutline.Actions.HideTemplates = Hide templates

# org.eclipse.acceleo.ide.ui.editors.template.quickfix
AcceleoCreateTemplateResolutionAfterLastMember.Label = Create template - after last member
AcceleoCreateTemplateResolutionAfterLastMember.Description = Create a new template after the last member
AcceleoCreateTemplateResolutionBeforeNextMember.Label = Create template - before next member
AcceleoCreateTemplateResolutionBeforeNextMember.Description = Create a new template before the next member
AcceleoCreateQueryResolutionAfterLastMember.Label = Create query - after last member
AcceleoCreateQueryResolutionAfterLastMember.Description = Create a new query after the last member
AcceleoCreateQueryResolutionBeforeNextMember.Label = Create query - before next member
AcceleoCreateQueryResolutionBeforeNextMember.Description = Create a new query before the next member
AcceleoCreateJavaServiceWrapperResolutionAfterLastMember.Label = Create Java service wrapper - after last member
AcceleoCreateJavaServiceWrapperResolutionAfterLastMember.Description = Create a query that invokes a Java method after the last member
AcceleoCreateComparisonResolution.Description = The result of the comparison between a collection and a scalar will always return false.\nThis action will replace the impossible comparison with the operation "->includes"
AcceleoCreateComparisonResolution.Label = Replace the impossible comparison with "->includes"

# org.eclipse.acceleo.ide.ui.preferences
AcceleoPreferences.QueryCacheButton = Toggle the cache of the evaluation of queries.
AcceleoPreferences.QueryCacheButtonTooltip = When checked, Acceleo will keep the result of the evaluations of all the queries in a cache during the generation.
AcceleoPreferences.DebugMessagesButton = Toggle the debug messages during the generation.
AcceleoPreferences.DebugMessagesButtonTooltip = When checked, Acceleo will log a warning is a query return ''null'' or if a generation does not generate anything.

AcceleoNotificationsPreferences.ForceDisableButton = Deactivate all notifications.
AcceleoNotificationsPreferences.ErrorNotificationsButton = Enable error notifications.
AcceleoNotificationsPreferences.WarningNotificationsButton = Enable warning notifications.
AcceleoNotificationsPreferences.OKNotificationsButton = Enable ok notifications.
AcceleoNotificationsPreferences.SuccessNotificationsButton = Enable success notifications.
AcceleoNotificationsPreferences.InfoNotificationsButton = Enable info notifications.
AcceleoNotificationsPreferences.CancelNotificationsButton = Enable cancel notifications.

AcceleoEditorColoringPreferencePage.foreground.label = Foreground color
AcceleoEditorColoringPreferencePage.color.label = Color
AcceleoEditorColoringPreferencePage.preview.label = Preview
AcceleoEditorColoringPreferencePage.link = Default colors and font can be configured on the <a>{0}</a> preference page.

# org.eclipse.acceleo.ide.ui.views.proposals
ProposalsBrowser.LongTimeOperation = Long Time Operation
ProposalsBrowser.LongTimeOperationCancel = Computing the selection is a long time operation! Do you really want to cancel?

AcceleoPatternProposalsUtils.MissingPatternClass = The class attribute of extension point ''{0}'' must be specified.

# org.eclipse.acceleo.ide.ui.views.overrides
OverridesBrowser.SelectedOverridesComment1 = @FIXME You have to put ''extends {0}'' at the end of the module declaration line
OverridesBrowser.SelectedOverridesComment2 = @TODO You should probably add the extension ''org.eclipse.acceleo.engine.dynamic.templates'' in your ''plugin.xml'' file if you wish to enable the ''dynamic overrides'' mechanism

# org.eclipse.acceleo.ide.ui.wizards.newfile
AcceleoNewTemplatesWizard.Title = New Acceleo Module File
AcceleoNewTemplatesWizard.MissingStrategyClass = The class attribute of extension point ''{0}'' must be specified.
AcceleoNewTemplatesWizard.Task.CreateTemplate = Creating {0}
AcceleoNewTemplatesWizard.Task.OpenTemplate = Opening file for edition

AcceleoNewTemplateWizardPage.Name = New Acceleo generation file
AcceleoNewTemplateWizardPage.Title1 = Create a new Acceleo generation file
AcceleoNewTemplateWizardPage.Browse = Browse...
AcceleoNewTemplateWizardPage.Description = This wizard creates new {0} files which can be opened in the Acceleo editor.
AcceleoNewTemplateWizardPage.Template = Module Files
AcceleoNewTemplateWizardPage.AddButton = Add
AcceleoNewTemplateWizardPage.AddButton.Tooltip = Add a new module in the project
AcceleoNewTemplateWizardPage.RemoveButton = Remove
AcceleoNewTemplateWizardPage.RemoveButton.Tooltip = Remove the selected module(s) from the wizard
AcceleoNewTemplateWizardPage.AdvanceShowedButton = Advanced >>
AcceleoNewTemplateWizardPage.AdvanceHiddenButton = << Advanced
AcceleoNewTemplateWizardPage.TemplateName = Name
AcceleoNewTemplateWizardPage.TemplateOutput = Initialize contents
AcceleoNewTemplateWizardPage.TemplateOutputFile = File
AcceleoNewTemplateWizardPage.TemplateExample = Select an example
AcceleoNewTemplateWizardPage.TemplateContainer = Parent Folder
AcceleoNewTemplateWizardPage.ContainerSelection = Select new file container
AcceleoNewTemplateWizardPage.MetamodelGroup = Metamodel information
AcceleoNewTemplateWizardPage.Registry = Registry
AcceleoNewTemplateWizardPage.MetamodelURI = Metamodel URI
AcceleoNewTemplateWizardPage.TemplateType = Generate for type
AcceleoNewTemplateWizardPage.Error.MissingContainer = File container must be specified.
AcceleoNewTemplateWizardPage.Error.ReadOnly = Project must be writeable.
AcceleoNewTemplateWizardPage.Error.MissingFileName = File name must not be empty.
AcceleoNewTemplateWizardPage.Error.InvalidFileName = File name must be valid.
AcceleoNewTemplateWizardPage.Error.ExistingFile = File {0} already exists.
AcceleoNewTemplateWizardPage.Error.JavaFolder = Generation files must be in a java source folder.
AcceleoNewTemplateWizardPage.Error.MissingURI = Metamodel URI cannot be empty.
AcceleoNewTemplateWizardPage.Error.InvalidURI = Metamodel URI is invalid.
AcceleoNewTemplateWizardPage.Error.MissingType = Generation type must be specified.
AcceleoNewTemplateWizardPage.AcceleoHasFileBlock = This will generate a file
AcceleoNewTemplateWizardPage.AcceleoHasMain = Create a main annotation (@main)

# org.eclipse.acceleo.ide.ui.wizards.newfile.example
AcceleoCopyExampleContentStrategy.Description = Copy example content
JavaServicesWrapperStrategy.Description = Create a Java services wrapper
MTContentStrategy.Description = Migrate *.mt content
XpandContentStrategy.Description = Migrate *.xpt content

# org.eclipse.acceleo.internal.ide.ui.wizards.newfile.main
AcceleoNewMainTemplateWizard.Title = New Acceleo Main Module File
AcceleoNewMainTemplateWizard.Task.CreateTemplate = Creating {0}
AcceleoNewMainTemplateWizard.Task.OpenTemplate = Opening file for edition

AcceleoNewMainTemplateWizardPage.Name = New Acceleo main generation file
AcceleoNewMainTemplateWizardPage.Title1 = Create a new Acceleo main generation file
AcceleoNewMainTemplateWizardPage.Browse = Browse...
AcceleoNewMainTemplateWizardPage.Description = This wizard creates new {0} files which can be opened in the Acceleo editor.
AcceleoNewMainTemplateWizardPage.TemplateName = Name
AcceleoNewMainTemplateWizardPage.TemplateContainer = Parent Folder
AcceleoNewMainTemplateWizardPage.ContainerSelection = Select new file container
AcceleoNewMainTemplateWizardPage.Error.MissingContainer = File container must be specified.
AcceleoNewMainTemplateWizardPage.Error.ReadOnly = Project must be writeable.
AcceleoNewMainTemplateWizardPage.Error.MissingFileName = File name must not be empty.
AcceleoNewMainTemplateWizardPage.Error.InvalidFileName = File name must be valid.
AcceleoNewMainTemplateWizardPage.Error.ExistingFile = File {0} already exists.
AcceleoNewMainTemplateWizardPage.Error.JavaFolder = Generation files must be in a java source folder.

FileBlocksWizardPage.Name = Templates selection
FileBlocksWizardPage.Title1 = Runnable templates selection.
FileBlocksWizardPage.Description = Select the templates to call in this new code generation workflow file.

# org.eclipse.acceleo.ide.ui.wizards.newproject
AcceleoConvertProjectWizard.Title = Convert to an Acceleo generation project
AcceleoConvertProjectWizard.Reference.Name = Projects Selection
AcceleoConvertProjectWizard.Reference.Description = Select the projects that are to be converted

AcceleoProjectPage.JRE = JRE
AcceleoProjectPage.ExecutionEnvironmentButtonLabel = Use an execution environment JRE:
AcceleoProjectPage.ProjectSpecificButtonLabel = Use a project specific JRE:
AcceleoProjectPage.DefaultJREButtonLabel = "Use the default JRE (currently ''{0}'')
AcceleoProjectPage.ConfigureJRE = <a>Configure JREs...</a>
AcceleoProjectPage.Unknown = Unknown
AcceleoProjectPage.NotJava5or6or7 = It is recommended to use Acceleo with the execution environment JRE J2SE-1.5, JavaSE-1.6 or JavaSE-1.7.

AcceleoNewProjectUIWizard.Title = Create a new Acceleo UI generation launcher project
AcceleoNewProjectUIWizard.Description = Select project name
AcceleoNewProjectUIWizard.Reference.Name = Acceleo Project Selection
AcceleoNewProjectUIWizard.Reference.Description = Select referenced projects
AcceleoNewProjectUIWizard.Config.Name = Acceleo UI Launcher settings
AcceleoNewProjectUIWizard.OverwriteProject = The project exists; ending this wizard will overwrite the old project.

AcceleoNewProjectWizard.Title = Create a new Acceleo generation project
AcceleoNewProjectWizard.Page.Name = New Acceleo generation project
AcceleoNewProjectWizard.Page.Description = Select project name

AcceleoNewProjectWizard.Monitor = Initializing Acceleo project
AcceleoModuleCreationPage.TwoIdenticalModule = At least two Acceleo modules are sharing the same name in the same folder.

AcceleoNewUIConfigurationPage.Title = Acceleo UI launcher settings
AcceleoNewUIConfigurationPage.Description = Configuration of the popup action that will be used to run the code generation.
AcceleoNewUIConfigurationPage.Group = Configuration
AcceleoNewUIConfigurationPage.ModuleName = Generator name
AcceleoNewUIConfigurationPage.ModelName = Model file name filter
AcceleoNewUIConfigurationPage.TargetFolder = Target folder access
AcceleoNewUIConfigurationPage.Error.MissingModuleName = Launcher name cannot be empty.
AcceleoNewUIConfigurationPage.Error.MissingModelName = Model name filter cannot be empty.
AcceleoNewUIConfigurationPage.Error.MissingTargetFolder = Target folder access cannot be empty.

# org.eclipse.acceleo.ide.ui.wizards.module
AcceleoModuleComposite.ModuleContainer = Parent Folder
AcceleoModuleComposite.Browse = Browse...
AcceleoModuleComposite.ModuleContainerHelp = The parent folder is the folder that will contain your Acceleo module. You should use a Java source folder and for your generators that contains a "main" template, the source folder in question should be exported in the MANIFEST.MF file.
AcceleoModuleComposite.ModuleName = Module Name
AcceleoModuleComposite.ModuleNameHelp = The name of an Acceleo module should describe the goal of your Acceleo module. It is recommended to use a name that starts with a lower case character and use camel case just like Java methods.
AcceleoModuleComposite.MetamodelURIs = Metamodel URIs
AcceleoModuleComposite.MetamodelURIsHelp = The metamodel is the container of the primary concept that will be manipulated in your generator (with UML for example, you can manipulate Classes and Attributes for your generation). You can use multiple metamodel in an Acceleo module, but be careful with concept that share the same name in several metamodel. You would need to prefix them by their package name to prevent any problems (ie: uml::Class).
AcceleoModuleComposite.ContainerSelection = Select a new file container
AcceleoModuleComposite.ModuleElementNameTemplate = Template Name
AcceleoModuleComposite.ModuleElementNameQuery = Query Name
AcceleoModuleComposite.ModuleElementNameHelp = The name of your module element (template or query) should start with a lower case name and use camel case just like a Java method.
AcceleoModuleComposite.ModuleElementType = Type
AcceleoModuleComposite.Type = Select the type of the first parameter of the module element.
AcceleoModuleComposite.ModuleElementTypeHelp = This type will be used as the type of the variable of your template or query.
AcceleoModuleComposite.ModuleElementKindTemplate = Template
AcceleoModuleComposite.ModuleElementKindQuery = Query
AcceleoModuleComposite.ModuleElementKindHelp = You can initialize your module with a template or a query, please see the documentation for more information on those elements.
AcceleoModuleComposite.ModuleGenerateDocumentation = Generate documentation
AcceleoModuleComposite.ModuleGenerateDocumentationHelp = If you check this box Acceleo will generate the basic documentation of your module. 
AcceleoModuleComposite.TemplateGenerateFile = Generate file
AcceleoModuleComposite.TemplateGenerateFileHelp = If you check this box, your template will contain a [file] block and it will generate a file. You can add the file block to generate a file manually to any template later. If you are using a template to generate a file, it is recommended to have this template in a package named "files".
AcceleoModuleComposite.TemplateMain = Main template
AcceleoModuleComposite.TemplateMainHelp = Checking this box will transform the template into a main template (ie: an entry point of the generation). The main template will be associated with a Java class with the same name created next to the module containing the template. You can use this class to launch programmaticaly the generation.
AcceleoModuleComposite.ModuleElementInitializeContent = Initialize Contents
AcceleoModuleComposite.ModuleElementInitializeContentHelp = The initialization options allow you to initialize the content of your template or your query with a specific strategy
AcceleoModuleComposite.ModuleElementInitializeContentKindHelp = Select the initialization strategy
AcceleoModuleComposite.ModuleElementInitializeFile = File
AcceleoModuleComposite.ModuleElementInitializeFileHelp = Select the file that will be considered for the initialization of the template or query
AcceleoModuleComposite.ModuleElementExample = Select an example
AcceleoModuleComposite.AddButton = Add metamodels to the module definition
AcceleoModuleComposite.RemoveButton = Remove metamodels from the module definition

# Errors and warnings
AcceleoModuleCompositeMessage.InvalidName = The name of the module cannot be empty.
AcceleoModuleCompositeMessage.InvalidParentFolder = The path of the parent folder of the module cannot be empty.
AcceleoModuleCompositeMessage.EmptyMetamodelURIs = The list of metamodel URIs used by the module is empty.
AcceleoModuleCompositeMessage.InvalidModuleElementName = The name of the module element cannot be empty.
AcceleoModuleCompositeMessage.InvalidModuleElementParameterType = The type of the parameter of the module element cannot be empty.
AcceleoModuleCompositeMessage.InvalidModuleElementInitializationKind = The kind of initialization strategy cannot be empty if the initialization of the content has been selected.
AcceleoModuleCompositeMessage.EmptyModuleElementInitializationPath = The path of initialization file cannot be empty if the initialization of the content has been selected.
AcceleoModuleCompositeMessage.InvalidModuleElementInitializationPath = The path of initialization file is invalid.
AcceleoModuleCompositeMessage.FileAlreadyExists = The module already exists.

# org.eclipse.acceleo.ide.ui.wizards.project


# org.eclipse.acceleo.ide.ui.wizards.project.ui



# org.eclipse.acceleo.ide.ui.dialog
TreeSelectionComposite.allowResourceCreation= You are allowed to select or create resource.
TreeSelectionComposite.resourceSelecitonOnly= You can only select existing resources.

# org.eclipse.acceleo.ide.ui.launching
AcceleoMainTab.Error.PluginLaunchWithLuna=Due to changes in the Eclipse platform in Luna, the Acceleo Plug-in Application strategy may not work.
AcceleoMainTab.Error.InvalidModel = Model path isn''t valid {0}.
AcceleoMainTab.Error.MissingModel = Model doesn''t exist {0}.
AcceleoMainTab.Error.MissingProfileModel = Profile result path must be set.
AcceleoMainTab.Error.MissingProfileModelExtension = Profile result file extension must be ".mtlp".
AcceleoMainTab.Error.InvalidTarget = Target path isn''t valid {0}.
AcceleoMainTab.Browse = Browse...
AcceleoMainTab.ModelPath = Model:
AcceleoMainTab.ProfileModelPath = Profile result:
AcceleoMainTab.TargetPath = Target:
AcceleoMainTab.SelectModel = Select a model
AcceleoMainTab.SelectProfileModel = Select a profile result file
AcceleoMainTab.ComputeTraceability = Contribute traceability information to Result View
AcceleoMainTab.ComputeProfiling = Enable profiling
AcceleoMainTab.Arguments = Properties Files:
AcceleoMainTab.LaunchingStrategy = Runner:
AcceleoMainTab.Profiling = Profiling:
AcceleoMainTab.Traceability = Traceability:
AcceleoMainTab.Configuration = Configuration:

AcceleoMainTab.Help.Model = The model is the input of the model to text generation. It must be an EMF model located in the workspace.
AcceleoMainTab.Help.Profile = The profiling will create an EMF model of the profiling data of the generation at the given path. The profiling model will allow you to see the time taken by of each instruction of your templates and queries during the generation. It can allow you to find the bottleneck in your Acceleo generators.
AcceleoMainTab.Help.Target = The target folder is the folder in which the file generated by Acceleo will be put.
AcceleoMainTab.Help.Strategy = Several generation strategies are available for Acceleo. The Acceleo plug-in strategy should be used most of the time as it relies on Eclipse for mechanism like package registration of EMF packages and it allow the use of advanced features of Acceleo like the debugger for example. With the Java strategy, Acceleo is launched as a stand alone Java application with no dependencies with Eclipse and it can be used to determine if your generator is ready to be used out of Eclipse. Please note that with the Java stand alone launch strategy, you have to register your packages manually otherwise Acceleo will not find them, please refer to the documentation for that (Help -> Help Contents -> Acceleo Model to Text).
AcceleoMainTab.Help.JavaClass = This is the starting point of your generation. This class must be a subclass of org.eclipse.acceleo.engine.service.AbstractAcceleoGenerator (otherwise the generation will not work). This Java class has been generated by having a [comment @main/] in one of the public template of your module. This Java class is regenerated with each modification of your Acceleo module, if you want to stop the refresh of this Java class in order to introduce a custom behavior inside, you can just modify one of the @generated comment to use @notgenerated or you can remove the [comment @main/].  
AcceleoMainTab.Help.Project = This is your Acceleo project. It is the project that contains your Acceleo modules. Please note that your input models can be in another project or even in an Eclipse plugin and your generated files can be in another project too.
AcceleoMainTab.Help.Properties = In this text box, you can enter the list of properties files that should be used during your generation. There should be one properties file path per line. They will be loaded by the engine when the generation will be launched. The path of a properties files must follow the same convention as the properties files path declared in the method getProperties of the Java launcher generated by Acceleo. For more information about properties file, please have a look to the documentation (Help -> Help Contents -> Acceleo Model to Text).
AcceleoMainTab.Help.Traceability = This will activate the traceability for the generation. If you want to see the traceability result, the Result view of Acceleo needs to be activated.
AcceleoMainTab.Help.Profiling = This will activate the profiler for the generation.  

AcceleoPropertiesFilesTab.Name = Properties Files
AcceleoPropertiesFilesTab.Arguments = Properties Files:
AcceleoPropertiesFilesTab.Help.Properties = In this text box, you can enter the properties of your generation. These properties must be coma-separated values that will be evaluated by the engine when the generation will be launched. In these properties you should enter the path of a properties file in order to be able to use it during the generation. For more information about properties file, please have a look to the documentation (Help -> Help Contents -> Acceleo Model to Text).

AcceleoMainMethodSearchEngine.SearchingForMainTypes = Searching for main types...

AcceleoApplicationLaunchShortcut.Error = Error
AcceleoApplicationLaunchShortcut.getTypeSelectionTitle = Select Acceleo Application
AcceleoApplicationLaunchShortcut.getEditorEmptyMessage = Editor does not contain a main type (@main annotation is missing in your main template)
AcceleoApplicationLaunchShortcut.getSelectionEmptyMessage = Selection does not contain a main type (@main annotation is missing in your main template)

AcceleoLaunchDelegate.MissingModel = No input model specified in the ''{0}'' Acceleo launch configuration.
AcceleoLaunchDelegate.MissingProfileModel = Profile result file is missing
AcceleoLaunchDelegate.UnableToRefreshProfileModelContainer = Unable to refresh profile result file container
AcceleoLaunchDelegate.ProfileModelError = Couldn''t save the profile result file {0}
AcceleoLaunchDelegate.MissingTarget = No target folder specified in the ''{0}'' Acceleo launch configuration.

AcceleoPluginLaunchStrategy.VirtualFolder = Acceleo cannot generate inside a virtual folder, please use a linked folder or a regular folder.
AcceleoPluginLaunchingStrategy.ErrorDialogTitle = An error has occurred during the launch of the generation
AcceleoPluginLaunchingStrategy.ErrorDialogOkButton = OK

# launch
AcceleoLaunchOperation.Initialize = Initializing the generator and loading of the input model(s).
AcceleoLaunchOperation.BadConfiguration = You should verify the code generation configuration because a required information is missing.
AcceleoLaunchOperation.ClassNotFound = Couldn''t load class {0} from project {1}

#org.eclipse.acceleo.ide.ui.debug.actions
BreakpointSelectModelRulerAction.Text = Breakpoint Condition
BreakpointSelectModelRulerAction.DialogMessage = Enter an OCL expression which return a boolean. The generation will stop if the expression return true.

#org.eclipse.acceleo.ide.ui.debug.model
AcceleoLineBreakpoint.HoverText = [{0}] {1} - line : {2}

AcceleoModelPresentation.ElementText = Template Generation
AcceleoModelPresentation.BreakpointText = {0} - line : {1}
AcceleoModelPresentation.ProcessText = Generate
AcceleoModelPresentation.ThreadText = Thread [main]
AcceleoModelPresentation.TargetText = Debugging Acceleo

AcceleoProcess.Label.Running = Generate

#org.eclipse.acceleo.ide.ui.classpath
AcceleoClasspathContainer.RuntimeDescription = Acceleo SDK
AcceleoClasspathContainer.EngineDescription = Acceleo Runtime
AcceleoClasspathContainer.ParserDescription = Acceleo Compiler

AcceleoClasspathContainerWizard.PageName = Acceleo Container Page
AcceleoClasspathContainerWizard.PageTitle = Acceleo Classpath Container Page
AcceleoClasspathContainerWizard.PageDescription = Adds the Acceleo runtime to the project

AcceleoClasspathContainerWizard.AcceleoEngine = Acceleo Runtime
AcceleoClasspathContainerWizard.AcceleoEngineDescription = The Acceleo runtime allows you to programmatically launch an Acceleo code generator.
AcceleoClasspathContainerWizard.AcceleoParser = Acceleo Compiler
AcceleoClasspathContainerWizard.AcceleoParserDescription = The Acceleo Compiler allows you to programmatically launch the compilation of Acceleo modules.

#marker
AcceleoMarkerUtils.JavaServiceClassNotExported = The Java service class ''{0}'' from the project ''{1}'' does not seem to have been exported.

#notifications
AcceleoNotifications.EngineTitle = An event occurred in the Acceleo engine.
AcceleoNotifications.CommonTitle = An event occurred in the Acceleo common.
AcceleoNotifications.TraceabilityTitle = An event occurred in the Acceleo traceability.
AcceleoNotifications.UITitle = An event occurred in the Acceleo Tooling.

AcceleoNotifications.FilesGeneratedTitle = Acceleo Generation Results
AcceleoNotifications.FilesGeneratedMessage = {0} files have been generated in {1}s
AcceleoNotifications.FilesGeneratedMessageWithErrors = {0} files have been generated in {1}s with\n\
{2} errors, {3} warnings and {4} infos.\n\
Open the <a>Error Log</a> view for details.

#interpreter
acceleo.interpreter.compilation.issue = Problems encountered while compiling expression
acceleo.interpreter.evaluation.issue = Problems encountered while evaluating expression
acceleo.interpreter.unresolved.compilation.issue = Unresolved Compilation Problems
acceleo.interpreter.result.type = Result of type {0}
acceleo.interpreter.result.size = and size {0}
acceleo.interpreter.save.expression = Save the content of the interpreter (in the linked editor or a new file)
acceleo.interpreter.new.module.path.title = Save new module
acceleo.interpreter.new.module.path = Select where the a new Acceleo module (".mtl" file) containing the expression in the interpreter should be saved.
acceleo.interpreter.load.module = Load an Acceleo module in the context
acceleo.interpreter.load.module.path.title = Load an Acceleo module.
acceleo.interpreter.load.module.path = Select an Acceleo module (".mtl" file) from an Acceleo project to import.
acceleo.interpreter.save.as.template = Save as a new template
acceleo.interpreter.save.as.template.title = Template name
acceleo.interpreter.save.as.template.description = Enter the name of the template that will be used to save the selected content of the interpreter.
acceleo.interpreter.save.as.template.label = Template name
acceleo.interpreter.save.as.query = Save as a new query
acceleo.interpreter.save.as.query.title = Query name
acceleo.interpreter.save.as.query.description = Enter the name of the query that will be used to save the selected content of the interpreter.
acceleo.interpreter.save.as.query.label = Query name

#resource set
AcceleoResourceSetCleanerJob.Name = Cleaning the loaded resources.
